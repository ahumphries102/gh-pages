{"version":3,"sources":["Components/Form.js","Components/Intro.js","Components/FetchDisplay.js","Components/Navigation.js","Components/MainContainer.js","App.js","serviceWorker.js","index.js"],"names":["Contact","state","thoughts","name","email","handleOnSubmit","event","preventDefault","_this","handleOnChange","setState","Object","defineProperty","currentTarget","value","react_default","a","createElement","onSubmit","this","action","method","className","onChange","placeholder","rows","cols","form","type","id","required","onClick","props","Component","FrontPage","lands","landName","imageToView","clickHandler","indexParam","_this2","manaSymbols","map","title","index","key","src","alt","Form_Contact","FetchDisplay","magicCards","pyResp","fetchServer","_callee","regenerator_default","wrap","_context","prev","next","fetch","mode","headers","Accept","Content-Type","then","result","json","item","console","log","catch","err","t0","abrupt","stop","fetchMagicCards","_callee2","magicApi","magicData","_context2","sent","data","newDeck","cards","i","image_uris","art_crop","Intro_FrontPage","TemporaryDrawer","top","left","bottom","right","toggleDrawer","side","open","classes","sideList","list","List","href","text","ListItem","button","ListItemText","primary","IconButton","menuButton","color","aria-label","Drawer","onClose","tabIndex","role","onKeyDown","withStyles","width","fullList","MainContainer","Navigation","FetchDisplay_FetchDisplay","App","MainContainer_MainContainer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d15bef76.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport default class Contact extends Component{\n\tstate = {\n\t\tthoughts:'',\n\t\tname: '',\n\t\temail: ''\n\t}\n\thandleOnSubmit = (event)=>{\n        event.preventDefault()\n        // eslint-disable-next-line\n\t\tlet userEmail = {\n\t\t\tthoughts:this.state.thoughts,\n\t\t\tname:this.state.name,\n\t\t\temail:this.state.email\n\t\t}\n\t}\n\thandleOnChange = (event)=>{\n\t\tthis.setState({\n\t\t\t//This line essentially listens to changes on wherever the event is placed. It looks at the name of the input and\n\t\t\t//adjusts to the current value that is being input. Since it's being called on setState, whatever is entered\n\t\t\t//into the value will appear \"on screen\" (or whever you have it console.logged)\n            [event.currentTarget.name]: event.currentTarget.value\n        })\n\t}\n\trender(){\n\t\treturn(\n\t\t\t<form onSubmit={this.handleOnSubmit} action='http://localhost:5000/' method=\"POST\" className=\"form\">\n\t\t\t<h3>Contact me</h3>\n\t\t\t<p>If you like what you've learned please feel free to reach out to me</p>\n\t\t\t<textarea onChange = {this.handleOnChange} placeholder=\"What are you thoughts?\" className=\"thoughts\" name=\"thoughts\" rows=\"10\" cols=\"33\"></textarea>\n\n\t\t\t  <div className=\"form-example\">\n\t\t\t    <label form=\"name\">Enter your name: </label>\n\t\t\t    <input onChange = {this.handleOnChange} placeholder=\"name\" type=\"text\" name=\"name\" id=\"name\" required/>\n\t\t\t  </div>\n\n\t\t\t  <div className=\"form-example\">\n\t\t\t    <label form=\"email\">Enter your email: </label>\n\t\t\t    <input onChange = {this.handleOnChange} placeholder=\"email\" type=\"email\" name=\"email\" id=\"email\" required/>\n\t\t\t  </div>\n\n\t\t\t  <div className=\"form-example\">\n\t\t\t    <input type=\"submit\" value=\"Subscribe!\" onClick={this.props.email}/>\n\t\t\t  </div>\n\t\t\t</form>\n\t\t)\n\t}\n}","import React, { Component } from 'react'\nimport Form from './Form'\nexport default class FrontPage extends Component {\n\tstate = {\n\t\tlands: [\"https://deckmaster.info/images/cards/AVR/269639-hr.jpg\", 'http://gatherer.wizards.com/Handlers/Image.ashx?multiverseid=410058&type=card', \"http://i50.tinypic.com/2cwomq1.jpg\",'https://deckmaster.info/images/cards/LRW/143630-hr.jpg','https://deckmaster.info/images/cards/AVR/269636-hr.jpg'],\n\t\tlandName: [\"https://vignette.wikia.nocookie.net/mtg/images/a/a8/Mana_U.png/revision/latest?cb=20130604114015\", \"https://i.pinimg.com/originals/bb/48/d5/bb48d50e5bc73b7329593e9f8d6aa283.png\", \"https://i.pinimg.com/originals/d5/82/65/d5826506625e0d04cfe41078b9e55a8a.png\", \"https://vignette.wikia.nocookie.net/mtg/images/d/da/Mana_W.png/revision/latest?cb=20130604114009\", \"https://vignette.wikia.nocookie.net/mtg/images/f/f7/Mana_G.png/revision/latest?cb=20130604114032\"],\n\t\timageToView : 0 \n\t}\n\tclickHandler = (indexParam)=>{\n\t\t// indexParam checks the index of the manaSymbols array and sets the\n\t\t// imageToView to to whatever the value of indexParam is which updates the state\n\t\t// to that card. The eslint line below disables a warning in React about comparing to itself.\n\t\t// eslint-disable-next-line\n\t\tif(indexParam === indexParam){\n\t\t\tthis.setState({\n\t\t\t\timageToView: indexParam\n\t\t\t})\n\t\t}\n\t}\n    render(){\n    \t// manaSymbols is a map of the landName array which returns an amount of buttons equal to\n    \t// the amount of elements in the array it mapped. Each button has an event handler \n    \tlet manaSymbols = this.state.landName.map((title, index)=>{\n    \t\treturn <button className = \"introButtons\" onClick={()=>{this.clickHandler(index)}} key={index}><img src={title} alt=\"blub\" /></button>\n    \t})\n        return (\n            <section className=\"infoContainer\">\n\t\t\t\t<div className=\"introText\">\n\t\t\t\t\t<div className=\"introChildren\">\n\t\t\t\t\t\t<article className=\"introduction\" id=\"navIntro\">\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<h2>INTRO</h2>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tMagic: The Gathering, also Magic or MTG, is a strategy card game created by Richard Garfield in 1993, and published by Wizards of the Coast. Magic holds the title of \"Most Played Trading Card Game,\" and is currently published in English, Simplified Chinese, Traditional Chinese, French, German, Italian, Korean, Japanese, Portuguese, Russian and Spanish. Digitally, the game can be played in Magic Online and MTG Arena.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<div className=\"introductionImg\">\n\t\t\t\t\t\t\t\t\t\t<img src=\"https://c-7npsfqifvt0x24hbnfqfejbx2edvstfdeox2edpn.g00.gamepedia.com/g00/3_c-7nuh.hbnfqfejb.dpn_/c-7NPSFQIFVT0x24iuuqtx3ax2fx2fhbnfqfejb.dvstfdeo.dpnx2fnuhtbmwbujpo_hbnfqfejbx2f8x2f8gx2fQpx78fs_Ojof.kqhx3fwfstjpox3dd3f3d9g80326bc17f37e057e5f93c699x26j21d.nbslx3djnbhf_$/$/$/$/$\" alt=\"powNine\"/>\n\t\t\t\t\t\t\t\t\t\t<p>These cards are from the set called Alpha, Magic's first set.</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</article>\n\t\t\t\t\t\t<article className=\"howToPlay\" id=\"howToPlay\">\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<h2>How to Play!</h2>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tMagic is a battle of wits between you and your opponent. The game is fairly to simple grasp, but as you continue to play you will begin to notice the the complexity and depth of the game. For now though let's take a look at the anatomy of a card and understand what the heck is going!\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"imgText\">\n\t\t\t\t\t\t\t\t<img src = {this.state.lands[this.state.imageToView]} alt=\"land\"/>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<h2>Foundation of Magic: Lands</h2>\n\t\t\t\t\t\t\t\t<p>Here we have a land</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{/*<img src=\"https://i.pinimg.com/originals/ba/06/75/ba0675a338bfd02b61bfa8a329cd1960.png\" alt=\"manasymbols\" />*/}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t{manaSymbols}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</article>\n\t\t\t\t\t\t<Form email={this.props.email}/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</section>\n        )\n    }\n}","import React, { Component } from 'react'\nimport Intro from \"./Intro\"\n\nexport default class FetchDisplay extends Component{\n\tstate = {\n\t\tmagicCards:[],\n        pyResp: []\n\t}\n\tcomponentDidMount(){\n\t\t//Call our fetches when localhost:3000 is connected\n\t\tthis.fetchServer().then((data) => console.log(data, \"server fetched\"))\n        this.fetchMagicCards().then((data) => console.log(data, \"did mount\"))\n\t}\n\t//Connect to our server which is fetched and returned once all the synchronous\n\t//code has compiled\n\tfetchServer = async ()=>{\n\t\ttry{\n\t\t//Fetch the server when we connect, set the method of the response to GET\n\t\t// use CORS for handling cross origin resource sharing\n\t\t fetch('http://localhost:5000/', {\n      \t\tmethod: 'POST',\n      \t\tmode: 'cors',\n      \t\theaders: {\n\t\t        'Accept': 'application/json',\n\t\t        'Content-Type': 'application/json'\n     \t\t}\n   \t\t})\n\t\t //\n\t      .then(result=>result.json())\n\t      .then(item=>console.log(item))\n\t      .catch(err =>{\n\t        console.log(\"We have an error in the fetchServer.js catch\", err);\n\t        return err;\n\t      })\n\t\t}\n\t\tcatch(err){\n\t\t\tconsole.log(err, \"fetchServer function failed in FetchDisplay\")\n\t\t\treturn err\n\t\t}\n\t}\n\tfetchMagicCards = async ()=>{\n\t\ttry{\n            const magicApi = await fetch(\"https://api.scryfall.com/cards/search?order=set&q=e%3Arna&unique=prints\")\n            const magicData = await magicApi.json()\n\n            this.setState({magicCards:magicData.data})\n\t\t}\n\t\tcatch(err){\n\t\t\tconsole.log(err, \"fetchMagicCards failed in MainContainer\")\n\t\t\treturn err\n\t\t}\n\t}\n\trender(){\n\t\tconst newDeck = this.state.magicCards.map((cards, i)=>{\n\t\t\treturn <img src={cards.image_uris.art_crop} alt='magic cards' key={i}/>\n\t\t})\n\n\t\treturn(\n\t\t\t<div className=\"mainBody\">\n\t\t\t<Intro magicCards={this.state.magicCards} email={this.fetchServer}/>\n\t\t\t\t<div className=\"grid\">{newDeck}</div>\n\n\t\t\t</div>\n\t\t\t)\n\t}\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\n//import Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\n//import Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\n//import ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n//import InboxIcon from '@material-ui/icons/MoveToInbox';\n//import MailIcon from '@material-ui/icons/Mail';\nimport IconButton from '@material-ui/core/IconButton';\n//import MenuIcon from '@material-ui/icons/Menu';\n//import { BrowserRouter as router, Route, Link} from 'react-router-dom'\n\nconst styles = {\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n};\n\n\n\nclass TemporaryDrawer extends Component {\n  state = {\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  };\n\n  toggleDrawer = (side, open) => () => {\n    this.setState({\n      [side]: open,\n    });\n  };\n  \n  render() {\n    const { classes } = this.props;\n    const sideList = (\n      <div className={classes.list} >\n        <List>\n          {[<a href=\"#navIntro\">Intro</a>, <a href=\"#howToPlay\">How to Play</a>, 'Send email', 'Drafts'].map((text, index) => (\n            <ListItem button key={text}>\n              {/*<ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>*/}\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </div>\n    );\n\n    return (\n      <div className=\"fixedNav\">\n        <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\" onClick={this.toggleDrawer('left', true) }>\n        \n          \n          </IconButton>\n        <Drawer open={this.state.left} onClose={this.toggleDrawer('left', false)}>\n          <div\n            tabIndex={0}\n            role=\"button\"\n            onClick={this.toggleDrawer('left', false)}\n            onKeyDown={this.toggleDrawer('left', false)}\n          >\n            {sideList}\n          </div>\n        </Drawer>\n        \n      </div>\n    );\n  }\n}\n\nTemporaryDrawer.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(TemporaryDrawer);\n","//MainContainer essentially is our main display\nimport React, { Component } from 'react'\n//import ReactDOM from 'react-dom'\nimport FetchDisplay from './FetchDisplay'\nimport Navigation from \"./Navigation\"\n\nexport default class MainContainer extends Component{\n\trender(){\n\t\treturn(\n\t\t\t<section>\n\t\t\t<Navigation />\n\t\t\t<div className=\"holdHero\">\n\t\t\t\t<section className=\"fixedHero\">\n\t\t\t\t\t<section className=\"hero\">\n\t\t\t\t\t\t<div className=\"simpleGradient\"></div>\n\t\t\t\t\t\t\t<div className=\"logo\">\n\t\t\t\t\t\t\t\t<img src='https://www.logolynx.com/images/logolynx/d7/d74ab82bf0a42a8d2152d0d1a55afe92.png' alt=\"logo\"/>\n\t\t\t\t\t\t\t\t<h1>Tutorial</h1>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t</section>\n\t\t\t\t</section>\n\t\t\t</div>\n\t\t\t\n\t\t\t<FetchDisplay />\n\t\t\t</section>\n\t\t\t)\n\t}\n}","import React, { Component } from 'react';\nimport './App.css';\nimport MainContainer from './Components/MainContainer'\n\nclass App extends Component {\n  render() {\n    return (\n      <MainContainer />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}